Groupe de :
-Guylan Richaud
-Paul Christol
-Anderson 
-Paolo 


Register login , création de post , like dislike, commentaire, possibilité de mettre des images dans les post, filtre catégorie, page profile activité , connexion google github, 



# Commande BASH à utiliser avant de lancer le forum
export GOOGLE_CLIENT_ID="461655867322-08i9h35a0cjmeivo4vtckj7d2ih8pgtl.apps.googleusercontent.com"
export GOOGLE_CLIENT_SECRET="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"
export GITHUB_CLIENT_ID="Ov23lif9zL2FSVnEVeaO"
export GITHUB_CLIENT_SECRET="49f00f4362b1c66b30ca2613d582e0f9295df62c"

# Pour lancer le forum

Faites un cd forum/ dans le terminal
Faites go run cmd/main.go
Connecter vous à l'adresse : https://localhost:8443/
Vous pouvez vous servir du forum
Vous avez le compte admin qui vous permets de supprimer tout les posts

email : admin@gmail.com
mdp : Admin123


/////////////////////////////////////////////////////////////////////////////////////////////////////////////


**Fonctionnalités de base:**
- Création d'un forum permettant la communication entre utilisateurs
- Système d'inscription et d'authentification des utilisateurs
- Création de posts et commentaires par les utilisateurs enregistrés
- Association de catégories aux posts
- Système de likes/dislikes pour les posts et commentaires
- Filtrage des posts par catégories, par création ou par likes

**Sécurité:**
- Implémentation du protocole HTTPS avec génération de certificats SSL
- Limitation de débit (Rate Limiting) pour prévenir les abus
- Chiffrement des mots de passe utilisateurs (avec bcrypt)
- Gestion sécurisée des sessions et cookies avec identifiants uniques (UUID)
- Protection contre les attaques web courantes

**Système de modération:**
- Différents niveaux d'accès: invités, utilisateurs, modérateurs, administrateurs
- Système de modération permettant l'approbation des messages
- Filtrage du contenu inapproprié (irrelevant, obscène, illégal, insultant)

**Fonctionnalités avancées:**
- Notifications pour les likes et commentaires
- Page d'activité personnelle de l'utilisateur
- Section pour éditer/supprimer les posts et commentaires
- Téléchargement d'images (JPEG, PNG, GIF) limité à 20 Mo
- Authentification via Google et GitHub

**Exigences techniques:**
- Backend en Go avec SQLite pour la base de données
- Utilisation de Docker pour la conteneurisation
- Gestion des erreurs et des statuts HTTP
- Code respectant les bonnes pratiques
- Tests unitaires recommandés
- Uniquement les packages autorisés: standard Go, sqlite3, bcrypt, UUID, autocert


/////////////////////////////////////////////////////////////////////////////////////////////////////////////


**Core Features:**
- Creation of a forum allowing communication between users
- User registration and authentication system
- Creation of posts and comments by registered users
- Association of categories with posts
- Like/dislike system for posts and comments
- Filtering posts by categories, by creation, or by likes

**Security:**
- Implementation of HTTPS protocol with SSL certificate generation
- Rate limiting to prevent abuse
- Password encryption (using bcrypt)
- Secure session and cookie management with unique identifiers (UUID)
- Protection against common web attacks

**Moderation System:**
- Different access levels: guests, users, moderators, administrators
- Moderation system allowing message approval
- Filtering inappropriate content (irrelevant, obscene, illegal, insulting)

**Advanced Features:**
- Notifications for likes and comments
- User activity page
- Section for editing/deleting posts and comments
- Image upload capability (JPEG, PNG, GIF) limited to 20 MB
- Authentication via Google and GitHub

**Technical Requirements:**
- Backend in Go with SQLite for the database
- Docker for containerization
- Error handling and HTTP status management
- Code following best practices
- Recommended unit testing
- Only allowed packages: standard Go, sqlite3, bcrypt, UUID, autocert


/////////////////////////////////////////////////////////////////////////////////////////////////////////////


# Informations d'authentification OAuth

# Google OAuth
GOOGLE_CLIENT_ID=461655867322-08i9h35a0cjmeivo4vtckj7d2ih8pgtl.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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

# GitHub OAuth
GITHUB_CLIENT_ID=Ov23lif9zL2FSVnEVeaO
GITHUB_CLIENT_SECRET=49f00f4362b1c66b30ca2613d582e0f9295df62c

# Paramètres du serveur
HTTP_PORT=8085
HTTPS_PORT=8443
DOMAIN=localhost

# Chemins du projet
DB_PATH=./forum.db
CERT_DIR=./certs
UPLOAD_DIR=./static/uploads

# Mode de développement (true/false)
DEV_MODE=true


/////////////////////////////////////////////////////////////////////////////////////////////////////////////


Je précise que je me sui servi de chatgpt, claude, cursor ai et vu que j'ai tout fait (Guylan Richaud) je m'en suis principalement servi
Je veux même pas être dev moi je veux être cyber donc bon


/////////////////////////////////////////////////////////////////////////////////////////////////////////////

